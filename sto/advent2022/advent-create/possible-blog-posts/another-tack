=TITLE Scissors, Paper, Rock

I usually try to entitle my Advent articles with a
catchy, Christmasy phrase but, this year, I'm 
changing course and discussing my general use of Raku
and my plan for future work.

However, I will close with my traditional 
seasonal ending.

=head2 Scissors, Paper, Rock

The phrase "scissors, paper, rock" comes from the childhood
game of determining the winner between two people by shaking their closed fist
three times and then showing one of three things with that same fist:
two fingers open (scissors), a flattened hand (paper), 
or a closed fist (rock). If both people show
the same thing, the tie is broken by another round,
and so until two different signs are shown. The
winner is determined by the following rules:
scissors cuts paper, paper covers rock, and rock breaks scissors.

That phrase, in a somewhat different ordering and spelling, encapsulates
my journey with Perl, starting circa 1993, and moving to Raku in
the fall of 2015. After retiring from the US Air Force, a short stint
with a US DoD contractor as a weapons effects analyst using Fortran
I had learned in school, I earned a master's at Clemson University where I
discovered how much I like to write programs that created programs for
other purposes. Unfortunately, I had to work around the then limitations
of Fortran for string handling. I hate to admit I missed the opportunity
in my previous job of grabbing onto Perl when it hit the nacent news groups
in 1987. But other factors prevented going on that path then (business
before pleasure on the company's dime).

My next job, again with another DoD contractor, I was given responsibility
for using a new weapons effects analysis program for 

earned a m

My fondness for programmng started earlier, though. When I was a Doolie (AKA Fourth classman,
i.e., freshman), at the US Air Force Academy in the fall of 1961, we all had to take
a course in computer programming using FORTTRAN IV, and I got hooked--loved it.
Unfortunately I later got side-tracked into liking analog computers better and picked
the wrong side of tecnology. But it was very cool, though. Describe your problem with differential
equations, 
normalize the equations,
create a flow diagram of a solution using electrical circuits and suitable
components, 
using a plug board duplicate the schematic
to program the computer, clamp the board onto the receiver on the computer, and flip the
on switch (the classic "smoke test"). If all went well, the plotter traced out the results over the range of
the desired input voltage.

That was so much fun I then decided to concentrate on EE and to get the prerequisites
  


=head2 Module naming






