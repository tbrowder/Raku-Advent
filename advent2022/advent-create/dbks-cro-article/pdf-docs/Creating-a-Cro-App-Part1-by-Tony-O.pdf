%PDF-1.3
%¥±ë¼
1 0 obj
<<
  /CreationDate (D:20221126100832-06'00')
  /Creator (Raku-6.d, PDF::Lite-0.0.12; PDF::Content-0.6.8; PDF-0.5.12)
  /Producer (Pod::To::PDF::Lite-0.1.6)
>>
endobj

2 0 obj
<< /Type /Catalog /Lang (en) /Pages 3 0 R >>
endobj

3 0 obj
<<
  /Type /Pages
  /Count 13
  /Kids [ 4 0 R 13 0 R 17 0 R 21 0 R 25 0 R 29 0 R 33 0 R 37 0 R 41 0 R 45 0 R 49 0 R 53 0 R 57 0 R ]
  /MediaBox [ 0 0 612 792 ]
>>
endobj

4 0 obj
<<
  /Type /Page
  /Contents 5 0 R
  /Parent 3 0 R
  /Resources <<
    /ExtGState << /GS1 6 0 R /GS2 7 0 R >>
    /Font << /F1 8 0 R /F2 9 0 R /F3 10 0 R /F4 12 0 R >>
  >>
>>
endobj

5 0 obj
<< /Length 3479 >> stream
BT
  1 0 0 1 72 704 Tm
  /F1 10 Tf
  (Building a Cro App - Part 1 building-a-cro-app-part-1 rakudo, programming) Tj
ET
BT
  1 0 0 1 72 682 Tm
  (This whole article will encompass building a Cro application \(with DB and templating\), configuring your apache) Tj
  11 TL
  T*
  (web server, and ensuring your app is running with systemd.) Tj
ET
BT
  1 0 0 1 72 635.8 Tm
  /F2 16 Tf
  (Part 1 - Building the Cro app) Tj
ET
BT
  1 0 0 1 72 613.8 Tm
  /F1 10 Tf
  (We're going to build a little 90s style forum, like Bytamin-C. This allows users to log in and participate in some) Tj
  T*
  (chats and have a profile, or surf around and view some of the chats others are having.) Tj
ET
BT
  1 0 0 1 72 580.8 Tm
  (Let's set up our directory structure first:) Tj
ET
BT
  1 0 0 1 82 562.1 Tm
  /F3 8.5 Tf
  (.) Tj
  9.35 TL
  T*
  (+-- bin) Tj
  T*
  (|   +-- app) Tj
  T*
  (+-- lib) Tj
  T*
  (+-- META6.json) Tj
  T*
  (+-- resources) Tj
  T*
  (+-- templates) Tj
ET
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  77 501 458 71.1 re
  B
Q
BT
  1 0 0 1 72 484 Tm
  /F1 10 Tf
  (In ) Tj
ET
BT
  1 0 0 1 72 484 Tm
  /F3 8.5 Tf
  [ -1274 (bin/app) ] TJ
ET
BT
  1 0 0 1 72 484 Tm
  /F1 10 Tf
  [ -4653 ( we'll have nothing for the time being, this will eventually be the script we use to start the webserver. In ) ] TJ
ET
BT
  1 0 0 1 72 484 Tm
  /F3 8.5 Tf
  [ -54535 ] TJ
  T*
  (META6.json) Tj
ET
BT
  1 0 0 1 72 474.65 Tm
  /F1 10 Tf
  [ -5100 ( lets add the following:) ] TJ
ET
BT
  1 0 0 1 82 455.95 Tm
  /F3 8.5 Tf
  ({) Tj
  T*
  (  "name":        "Demo",) Tj
  T*
  (  "auth":        "zef:tony-o",) Tj
  T*
  (  "version":     "0.0.1",) Tj
  T*
  (  "api":         "0",) Tj
  T*
  (  "description": "A demo cro app",) Tj
  T*
  (  "depends":     ["cro", "Cro::WebApp::Template"],) Tj
  T*
  (  "provides":    {}) Tj
  T*
  (}) Tj
ET
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  77 376.15 458 89.8 re
  B
Q
BT
  1 0 0 1 72 359.15 Tm
  /F1 10 Tf
  (After doing this, you can run `zef install --/test --depsonly .` and you should end up with our app's dependencies so) Tj
  11 TL
  T*
  (we can start filling out the rest.) Tj
ET
BT
  1 0 0 1 72 319.55 Tm
  /F2 13 Tf
  (The ) Tj
ET
BT
  1 0 0 1 72 319.55 Tm
  /F4 11.05 Tf
  [ -2255 (bin/app) ] TJ
ET
BT
  1 0 0 1 72 297.55 Tm
  /F1 10 Tf
  (Typically stuff inside of the bin directory doesn't gain the benefit of precompilation. To gain some start up speed and) Tj
  T*
  (benefits, the ) Tj
ET
BT
  1 0 0 1 72 286.55 Tm
  /F3 8.5 Tf
  [ -6045 (bin/app) ] TJ
ET
BT
  1 0 0 1 72 286.55 Tm
  /F1 10 Tf
  [ -8708 ( file will just be stubbed to start our app. So let's create the bit we want precompiled in ) ] TJ
ET
BT
  1 0 0 1 72 286.55 Tm
  /F3 8.5 Tf
  [ -51236 ] TJ
  9.35 TL
  T*
  (lib/Demo/App.rakumod) Tj
ET
BT
  1 0 0 1 72 277.2 Tm
  /F1 10 Tf
  [ -10200 ( add the following:) ] TJ
ET
BT
  1 0 0 1 82 258.5 Tm
  /F3 8.5 Tf
  (unit module Demo::App;) Tj
  T*
  [ ] TJ
  T*
  (use Cro::HTTP::Router;) Tj
  T*
  (use Cro::HTTP::Server;) Tj
  T*
  (use Config;) Tj
  T*
  [ ] TJ
  T*
  (my $application = route {) Tj
  T*
  (  get -> 'greet', $name {) Tj
  T*
  (    content 'text/plain', "Hello, $name!";) Tj
  T*
  (  }) Tj
  T*
  (}) Tj
  T*
  [ ] TJ
  T*
  (my $host = config<listen-ip>   // '0.0.0.0';) Tj
  T*
  (my $port = config<listen-port> // 10000;) Tj
  T*
  [ ] TJ
  T*
  (my Cro::Service $service = Cro::HTTP::Server.new\(:$host, :$port, :$application\);) Tj
  T*
ET
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  77 113.25 458 155.25 re
  B
Q
endstream
endobj

6 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

7 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

8 0 obj
<<
  /Type /Font
  /Subtype /Type1
  /BaseFont /Times-Roman
  /Encoding /WinAnsiEncoding
>>
endobj

9 0 obj
<<
  /Type /Font
  /Subtype /Type1
  /BaseFont /Times-Bold
  /Encoding /WinAnsiEncoding
>>
endobj

10 0 obj
<< /Type /Font /Subtype /Type1 /BaseFont /Courier /Encoding 11 0 R >>
endobj

11 0 obj
<<
  /Type /Encoding
  /BaseEncoding /WinAnsiEncoding
  /Differences [ 1 /numbersign ]
>>
endobj

12 0 obj
<<
  /Type /Font
  /Subtype /Type1
  /BaseFont /Courier-Bold
  /Encoding /WinAnsiEncoding
>>
endobj

13 0 obj
<<
  /Type /Page
  /Contents 14 0 R
  /Parent 3 0 R
  /Resources <<
    /ExtGState << /GS1 15 0 R /GS2 16 0 R >>
    /Font << /F1 10 0 R /F2 8 0 R /F3 9 0 R >>
  >>
>>
endobj

14 0 obj
<< /Length 4350 >> stream
BT
  1 0 0 1 82 704 Tm
  /F1 8.5 Tf
  ($service.start;) Tj
  9.35 TL
  T*
  [ ] TJ
  T*
  (say "Listening: $host:$port";) Tj
  T*
  [ ] TJ
  T*
  (react whenever signal\(SIGINT\) {) Tj
  T*
  (  $service.stop;) Tj
  T*
  (  exit;) Tj
  T*
  (}) Tj
ET
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  77 633.55 458 80.45 re
  B
Q
BT
  1 0 0 1 72 616.55 Tm
  /F2 10 Tf
  (You'll see we're including something called ) Tj
ET
BT
  1 0 0 1 72 616.55 Tm
  /F1 8.5 Tf
  [ -20813 (Config) ] TJ
ET
BT
  1 0 0 1 72 616.55 Tm
  /F2 10 Tf
  [ -20751 ( , we haven't created this yet so let's add this to ) ] TJ
ET
BT
  1 0 0 1 72 616.55 Tm
  /F1 8.5 Tf
  [ -46696 ] TJ
  T*
  (lib/Config.rakumod) Tj
ET
BT
  1 0 0 1 72 607.2 Tm
  /F2 10 Tf
  [ -9180 ( :) ] TJ
ET
BT
  1 0 0 1 82 588.5 Tm
  /F1 8.5 Tf
  (unit module Config;) Tj
  T*
  [ ] TJ
  T*
  (sub config is export {) Tj
  T*
  (  {) Tj
  T*
  (    listen-ip   => '127.0.0.1',) Tj
  T*
  (    listen-port => 8666,) Tj
  T*
  (  };) Tj
  T*
  (}) Tj
ET
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  77 518.05 458 80.45 re
  B
Q
BT
  1 0 0 1 72 501.05 Tm
  /F2 10 Tf
  (Now, as we add things that need configuration we can add those to this file. There are plenty of ways to include) Tj
  11 TL
  T*
  (config and if you're storing passwords and secrets then this module should retrieve those in a secure way. We still) Tj
  T*
  (can't run this app to test it until we modify the ) Tj
ET
BT
  1 0 0 1 72 479.05 Tm
  /F1 8.5 Tf
  [ -21944 (provides) ] TJ
ET
BT
  1 0 0 1 72 479.05 Tm
  /F2 10 Tf
  [ -22732 ( in our ) ] TJ
ET
BT
  1 0 0 1 72 479.05 Tm
  /F1 8.5 Tf
  [ -30109 (META6.json) ] TJ
ET
BT
  1 0 0 1 72 479.05 Tm
  /F2 10 Tf
  [ -30693 ( :) ] TJ
ET
BT
  1 0 0 1 82 460.35 Tm
  /F1 8.5 Tf
  ({) Tj
  9.35 TL
  T*
  (  ...) Tj
  T*
  (  "provides": {) Tj
  T*
  (    "Demo::App": "lib/Demo/App.rakumod",) Tj
  T*
  (    "Config":    "lib/Config.rakumod") Tj
  T*
  (  }) Tj
  T*
  (}) Tj
ET
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  77 399.25 458 71.1 re
  B
Q
BT
  1 0 0 1 72 382.25 Tm
  /F2 10 Tf
  (Now, when you run: `raku -I. -e 'use Demo::App'` you'll get the message of where your server is listening and if you) Tj
  11 TL
  T*
  (hit that ip/port + ) Tj
ET
BT
  1 0 0 1 72 371.25 Tm
  /F1 8.5 Tf
  [ -7985 (/greet/world) ] TJ
ET
BT
  1 0 0 1 72 371.25 Tm
  /F2 10 Tf
  [ -12907 ( with your browser \(`http://127.0.0.1:8666` if you didn't modify the config\) then you) ] TJ
  T*
  (should get a nice message of `Hello, world!`. This means our server is working. Let's stub it out now, in ) Tj
ET
BT
  1 0 0 1 72 360.25 Tm
  /F1 8.5 Tf
  [ -49160 (bin/app) ] TJ
ET
BT
  1 0 0 1 72 360.25 Tm
  /F2 10 Tf
  [ -45356 ( :) ] TJ
ET
BT
  1 0 0 1 82 341.55 Tm
  /F1 8.5 Tf
  (!/usr/bin/env raku) Tj
  9.35 TL
  T*
  (use Demo::App;) Tj
ET
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  77 327.2 458 24.35 re
  B
Q
BT
  1 0 0 1 72 310.2 Tm
  /F2 10 Tf
  (Now your server can run with `raku -I. bin/app` and you can hit the same endpoint you did above for great success.) Tj
ET
BT
  1 0 0 1 72 281.6 Tm
  /F3 13 Tf
  (Building Templates and Static Files) Tj
ET
BT
  1 0 0 1 72 256.3 Tm
  /F3 11.5 Tf
  (Static Files) Tj
ET
BT
  1 0 0 1 72 234.3 Tm
  /F2 10 Tf
  (Serving static files is fairly simple in cro, add the following routes to ) Tj
ET
BT
  1 0 0 1 72 234.3 Tm
  /F1 8.5 Tf
  [ -32678 (lib/Demo/App.rakumod) ] TJ
ET
BT
  1 0 0 1 72 234.3 Tm
  /F2 10 Tf
  [ -37976 ( :) ] TJ
ET
BT
  1 0 0 1 82 215.6 Tm
  /F1 8.5 Tf
  (get -> 'style', *@path {) Tj
  T*
  (  static 'static/style', @path;) Tj
  T*
  (}) Tj
  T*
  [ ] TJ
  T*
  (get -> 'script', *@path {) Tj
  T*
  (  static 'static/script', @path;) Tj
  T*
  (}) Tj
ET
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  77 154.5 458 71.1 re
  B
Q
BT
  1 0 0 1 72 137.5 Tm
  /F2 10 Tf
  (Cro protects us against a query like ) Tj
ET
BT
  1 0 0 1 72 137.5 Tm
  /F1 8.5 Tf
  [ -16893 (/script/../db.sqlite) ] TJ
ET
BT
  1 0 0 1 72 137.5 Tm
  /F2 10 Tf
  [ -24559 ( so we don't need to worry about path resolution ending) ] TJ
  11 TL
  T*
  (up outside of our static file directories. You now need to create the directories ) Tj
ET
BT
  1 0 0 1 72 126.5 Tm
  /F1 8.5 Tf
  [ -36953 (static/style) ] TJ
ET
BT
  1 0 0 1 72 126.5 Tm
  /F2 10 Tf
  [ -37530 ( and ) ] TJ
ET
BT
  1 0 0 1 72 126.5 Tm
  /F1 8.5 Tf
  [ -46440 (static/script) ] TJ
ET
BT
  1 0 0 1 72 126.5 Tm
  /F2 10 Tf
  [ -46104 ] TJ
  T*
ET
endstream
endobj

15 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

16 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

17 0 obj
<<
  /Type /Page
  /Contents 18 0 R
  /Parent 3 0 R
  /Resources <<
    /ExtGState << /GS1 19 0 R /GS2 20 0 R >>
    /Font << /F1 8 0 R /F2 10 0 R /F3 9 0 R >>
  >>
>>
endobj

18 0 obj
<< /Length 3575 >> stream
BT
  1 0 0 1 72 704 Tm
  /F1 10 Tf
  ( you should have the directory structure of:) Tj
ET
BT
  1 0 0 1 82 685.3 Tm
  /F2 8.5 Tf
  (.) Tj
  9.35 TL
  T*
  (+-- bin) Tj
  T*
  (   +-- app) Tj
  T*
  (+-- lib) Tj
  T*
  (|   +-- Config.rakumod) Tj
  T*
  (|   +-- Demo) Tj
  T*
  (|       +-- App.rakumod) Tj
  T*
  (+-- META6.json) Tj
  T*
  (+-- resources) Tj
  T*
  (+-- static) Tj
  T*
  (|   +-- script) Tj
  T*
  (|   +-- style) Tj
  T*
  (+-- templates) Tj
ET
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  77 568.1 458 127.2 re
  B
Q
BT
  1 0 0 1 72 551.1 Tm
  /F1 10 Tf
  (That's it for static files.) Tj
ET
BT
  1 0 0 1 72 525.8 Tm
  /F3 11.5 Tf
  (Templates) Tj
ET
BT
  1 0 0 1 72 503.8 Tm
  /F1 10 Tf
  (Cro has the concept of partials so we're going to modify our ) Tj
ET
BT
  1 0 0 1 72 503.8 Tm
  /F2 8.5 Tf
  [ -28508 (greet/$name) ] TJ
ET
BT
  1 0 0 1 72 503.8 Tm
  /F1 10 Tf
  [ -29842 ( route to work off of a template.) ] TJ
ET
BT
  1 0 0 1 72 481.8 Tm
  (First, change our ) Tj
ET
BT
  1 0 0 1 72 481.8 Tm
  /F2 8.5 Tf
  [ -8234 (use) ] TJ
ET
BT
  1 0 0 1 72 481.8 Tm
  /F1 10 Tf
  [ -8529 ( block in ) ] TJ
ET
BT
  1 0 0 1 72 481.8 Tm
  /F2 8.5 Tf
  [ -14446 (lib/Demo/App.rakumod) ] TJ
ET
BT
  1 0 0 1 72 481.8 Tm
  /F1 10 Tf
  [ -22479 ( to include ) ] TJ
ET
BT
  1 0 0 1 72 481.8 Tm
  /F2 8.5 Tf
  [ -31707 (Cro::WebApp::Template) ] TJ
ET
BT
  1 0 0 1 72 481.8 Tm
  /F1 10 Tf
  [ -37661 ( :) ] TJ
ET
BT
  1 0 0 1 82 463.1 Tm
  /F2 8.5 Tf
  (unit module Demo::App;) Tj
  T*
  [ ] TJ
  T*
  (use Cro::HTTP::Router;) Tj
  T*
  (use Cro::HTTP::Server;) Tj
  T*
  (use Cro::WebApp::Template;) Tj
  T*
  [ ] TJ
  T*
  (use Config;) Tj
ET
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  77 402 458 71.1 re
  B
Q
BT
  1 0 0 1 72 385 Tm
  /F1 10 Tf
  (And modify our application's route block to be:) Tj
ET
BT
  1 0 0 1 82 366.3 Tm
  /F2 8.5 Tf
  (my $application = route {) Tj
  T*
  (  template-location 'templates/';) Tj
  T*
  [ ] TJ
  T*
  (  get -> 'greet', $name {) Tj
  T*
  (    template 'main.crotmp', {:$name};) Tj
  T*
  (  }) Tj
  T*
  (}) Tj
ET
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  77 305.2 458 71.1 re
  B
Q
BT
  1 0 0 1 72 288.2 Tm
  /F1 10 Tf
  (With these changes we're telling cro to look in the ) Tj
ET
BT
  1 0 0 1 72 288.2 Tm
  /F2 8.5 Tf
  [ -23868 (templates/) ] TJ
ET
BT
  1 0 0 1 72 288.2 Tm
  /F1 10 Tf
  [ -25388 ( directory for whatever ) ] TJ
ET
BT
  1 0 0 1 72 288.2 Tm
  /F2 8.5 Tf
  [ -40975 (.crotmp) ] TJ
ET
BT
  1 0 0 1 72 288.2 Tm
  /F1 10 Tf
  [ -38399 ( first and we're) ] TJ
  11 TL
  T*
  (telling our greeter route to use a template giving it access to the ) Tj
ET
BT
  1 0 0 1 72 277.2 Tm
  /F2 8.5 Tf
  [ -30159 ($name) ] TJ
ET
BT
  1 0 0 1 72 277.2 Tm
  /F1 10 Tf
  [ -28185 ( variable. Now we need to create the template ) ] TJ
ET
BT
  1 0 0 1 72 277.2 Tm
  /F2 8.5 Tf
  [ -54982 ] TJ
  9.35 TL
  T*
  (templates/main.crotmp) Tj
ET
BT
  1 0 0 1 72 267.85 Tm
  /F1 10 Tf
  [ -10710 ( :) ] TJ
ET
BT
  1 0 0 1 82 249.15 Tm
  /F2 8.5 Tf
  (<!DOCTYPE html>) Tj
  T*
  (<html>) Tj
  T*
  (  <head />) Tj
  T*
  (  <body>) Tj
  T*
  (    Greetings, <.name>!) Tj
  T*
  (  </body>) Tj
  T*
  (</html>) Tj
ET
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  77 188.05 458 71.1 re
  B
Q
BT
  1 0 0 1 72 171.05 Tm
  /F1 10 Tf
  (Now firing up our application and visiting our server at ) Tj
ET
BT
  1 0 0 1 72 171.05 Tm
  /F2 8.5 Tf
  [ -26336 (/greet/world) ] TJ
ET
BT
  1 0 0 1 72 171.05 Tm
  /F1 10 Tf
  [ -28506 ( we'll get the same message but this time) ] TJ
  11 TL
  T*
  (complete with html! Now let's build out our authorization and functionality.) Tj
ET
endstream
endobj

19 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

20 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

21 0 obj
<<
  /Type /Page
  /Contents 22 0 R
  /Parent 3 0 R
  /Resources <<
    /ExtGState << /GS1 23 0 R /GS2 24 0 R >>
    /Font << /F1 9 0 R /F2 8 0 R /F3 10 0 R >>
  >>
>>
endobj

22 0 obj
<< /Length 3825 >> stream
BT
  1 0 0 1 72 704 Tm
  /F1 13 Tf
  (Building Our Application's Functionality) Tj
ET
BT
  1 0 0 1 72 682 Tm
  /F2 10 Tf
  (If we want to let users post and sign up, we're going to want a database. Let's define our table schemas \(using) Tj
  11 TL
  T*
  (SQLite for this demo\), in ) Tj
ET
BT
  1 0 0 1 72 671 Tm
  /F3 8.5 Tf
  [ -12156 (schema.sql) ] TJ
ET
BT
  1 0 0 1 72 671 Tm
  /F2 10 Tf
  [ -15433 ( :) ] TJ
ET
BT
  1 0 0 1 82 652.3 Tm
  /F3 8.5 Tf
  (CREATE TABLE users \() Tj
  9.35 TL
  T*
  (  id         UUID NOT NULL PRIMARY KEY,) Tj
  T*
  (  name       TEXT NOT NULL,) Tj
  T*
  (  foreign_id TEXT) Tj
  T*
  (\);) Tj
  T*
  [ ] TJ
  T*
  (CREATE TABLE posts \() Tj
  T*
  (  id      UUID NOT NULL PRIMARY KEY,) Tj
  T*
  (  author  UUID NOT NULL,) Tj
  T*
  (  title   TEXT NOT NULL,) Tj
  T*
  (  body    TEXT NOT NULL,) Tj
  T*
  (  parent  UUID,) Tj
  T*
  [ ] TJ
  T*
  (  FOREIGN KEY\(author\) REFERENCES users\(id\)) Tj
  T*
  (\);) Tj
ET
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  77 516.4 458 145.9 re
  B
Q
BT
  1 0 0 1 72 499.4 Tm
  /F2 10 Tf
  (Now run `sqlite3 resources/db.sqlite < schema.sql`, you should now have a ) Tj
ET
BT
  1 0 0 1 72 499.4 Tm
  /F3 8.5 Tf
  [ -35626 (db.sqlite) ] TJ
ET
BT
  1 0 0 1 72 499.4 Tm
  /F2 10 Tf
  [ -34872 ( database with our posts and) ] TJ
  11 TL
  T*
  (users ready to use. Let's make sure we keep our ) Tj
ET
BT
  1 0 0 1 72 488.4 Tm
  /F3 8.5 Tf
  [ -22656 (META6.json) ] TJ
ET
BT
  1 0 0 1 72 488.4 Tm
  /F2 10 Tf
  [ -24358 ( up to date, add a ) ] TJ
ET
BT
  1 0 0 1 72 488.4 Tm
  /F3 8.5 Tf
  [ -36988 (resources) ] TJ
ET
BT
  1 0 0 1 72 488.4 Tm
  /F2 10 Tf
  [ -36030 ( key:) ] TJ
ET
BT
  1 0 0 1 82 469.7 Tm
  /F3 8.5 Tf
  ({) Tj
  9.35 TL
  T*
  (  ...) Tj
  T*
  (  "provides": {...},) Tj
  T*
  (  "resources": [ "db.sqlite" ]) Tj
  T*
  (}) Tj
ET
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  77 427.3 458 52.4 re
  B
Q
BT
  1 0 0 1 72 410.3 Tm
  /F2 10 Tf
  (We're going to morph our greeter route to just be our app's main route and allow people to log in. In ) Tj
ET
BT
  1 0 0 1 72 410.3 Tm
  /F3 8.5 Tf
  [ -47345 ] TJ
  T*
  (lib/Demo/App.rakumod) Tj
ET
BT
  1 0 0 1 72 400.95 Tm
  /F2 10 Tf
  [ -10200 ( make the modifications to our ) ] TJ
ET
BT
  1 0 0 1 72 400.95 Tm
  /F3 8.5 Tf
  [ -26705 ($application) ] TJ
ET
BT
  1 0 0 1 72 400.95 Tm
  /F2 10 Tf
  [ -28819 ( :) ] TJ
ET
BT
  1 0 0 1 82 382.25 Tm
  /F3 8.5 Tf
  (my $application = route {) Tj
  T*
  (  template-location 'templates/';) Tj
  T*
  [ ] TJ
  T*
  (  get -> {) Tj
  T*
  (    template 'main.crotmp';) Tj
  T*
  (  }) Tj
  T*
  (}) Tj
ET
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  77 321.15 458 71.1 re
  B
Q
BT
  1 0 0 1 72 304.15 Tm
  /F2 10 Tf
  (Now we're at a break point. For this article we're going to use github's oauth so you'll need to take a break from this) Tj
  11 TL
  T*
  (article and create a github oauth app \(at the time of writing this, the path in github is `Settings/Developer Settings`\)) Tj
  T*
  (with the following info:) Tj
ET
q
  0 0 1 rg
  0 0 1 RG
  BT
    1 0 0 1 72 260.15 Tm
    (Github Screenshot) Tj
  ET
Q
BT
  1 0 0 1 72 238.15 Tm
  (Now we need the secret you generated and the client id in ) Tj
ET
BT
  1 0 0 1 72 238.15 Tm
  /F3 8.5 Tf
  [ -27509 (lib/Config.rakumod) ] TJ
ET
BT
  1 0 0 1 72 238.15 Tm
  /F2 10 Tf
  [ -32563 ( :) ] TJ
ET
BT
  1 0 0 1 82 219.45 Tm
  /F3 8.5 Tf
  (sub config is export {) Tj
  9.35 TL
  T*
  (  {) Tj
  T*
  (    listen-ip   => '127.0.0.1',) Tj
  T*
  (    listen-port => 8666,) Tj
  T*
  (    gh-secret   => 'd4......................6bb9d3',) Tj
  T*
  (    gh-client   => '85c...fc50decdf74c8',) Tj
  T*
  (  };) Tj
  T*
  (}) Tj
ET
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  77 149 458 80.45 re
  B
Q
BT
  1 0 0 1 72 132 Tm
  /F2 10 Tf
  (Okay! Let's build out an OAuth flow. Essentially what happens in OAuth is:) Tj
ET
endstream
endobj

23 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

24 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

25 0 obj
<<
  /Type /Page
  /Contents 26 0 R
  /Parent 3 0 R
  /Resources <<
    /ExtGState << /GS1 27 0 R /GS2 28 0 R >>
    /Font << /F1 8 0 R /F2 10 0 R >>
  >>
>>
endobj

26 0 obj
<< /Length 3349 >> stream
BT
  1 0 0 1 82 704 Tm
  /F1 10 Tf
  () Tj
ET
BT
  1 0 0 1 92 704 Tm
  (Your app directs the user to the OAuth provider with a list of grants \(what resources we want access to\)) Tj
ET
BT
  1 0 0 1 82 682 Tm
  () Tj
ET
BT
  1 0 0 1 92 682 Tm
  (The user succeeds or fails at the login \(if fails then this process stops\)) Tj
ET
BT
  1 0 0 1 82 660 Tm
  () Tj
ET
BT
  1 0 0 1 92 660 Tm
  (The provider gives our server an authorization grant) Tj
ET
BT
  1 0 0 1 82 638 Tm
  () Tj
ET
BT
  1 0 0 1 92 638 Tm
  (Our server then requests an access token from the provider) Tj
ET
BT
  1 0 0 1 82 616 Tm
  () Tj
ET
BT
  1 0 0 1 92 616 Tm
  (We can use that access token to request information from the OAuth provider within the scope of our grants) Tj
ET
BT
  1 0 0 1 72 594 Tm
  (We're going to modify our route to our application:) Tj
ET
BT
  1 0 0 1 82 575.3 Tm
  /F2 8.5 Tf
  (class SessionVar does Cro::HTTP::Auth {) Tj
  9.35 TL
  T*
  (  has $.user         is rw;) Tj
  T*
  (  has $.user-id      is rw;) Tj
  T*
  (  has $.login-state  is rw;) Tj
  T*
  (}) Tj
  T*
  [ ] TJ
  T*
  (my $client      = HTTP::Tinyish.new;) Tj
  T*
  (my $db          = DB::SQLite.new\(filename => %?RESOURCES<db.sqlite>.absolute\);) Tj
  T*
  (my $application = route {) Tj
  T*
  (  template-location 'templates/';) Tj
  T*
  [ ] TJ
  T*
  (  before Cro::HTTP::Session::InMemory[SessionVar].new\() Tj
  T*
  (    expiration  => Duration.new\(60*60\),) Tj
  T*
  (    cookie-name => 'demo-app',) Tj
  T*
  (  \);) Tj
  T*
  [ ] TJ
  T*
  (  get -> SessionVar \\session {) Tj
  T*
  (    template 'main.crotmp', {) Tj
  T*
  (      user      => session.user,) Tj
  T*
  (      logged-in => \(session.user-id ?? True !! False\),) Tj
  T*
  (    };) Tj
  T*
  (  }) Tj
  T*
  [ ] TJ
  T*
  (  get -> SessionVar \\session, 'oauth' {) Tj
  T*
  (    session.login-state = \('a' .. 'z'\).pick\(24\).sort.join\(''\);) Tj
  T*
  (    redirect 'https://github.com/login/oauth/authorize') Tj
  T*
  (           ~ "?client_id={encode-percents: config<gh-client>}") Tj
  T*
  (           ~ "&redirect_uri={encode-percents: "http://localhost:8666/oauth2"}") Tj
  T*
  (           ~ "&state={encode-percents: session.login-state}";) Tj
  T*
  (  }) Tj
  T*
  [ ] TJ
  T*
  (  get -> SessionVar \\session, 'oauth2', :$state! is query, Str :$code! is query, :$error?) Tj
  T*
  (is query {) Tj
  T*
  (    redirect '/' if $error.defined;) Tj
  T*
  (    my $resp = $client.post\() Tj
  T*
  (      headers => {Accept => 'application/json'},) Tj
  T*
  (      'https://github.com/login/oauth/access_token') Tj
  T*
  (      ~ "?client_id={encode-percents: config<gh-client> }") Tj
  T*
  (      ~ "&client_secret={encode-percents: config<gh-secret> }") Tj
  T*
  (      ~ "&code={encode-percents: $code }",) Tj
  T*
  (    \);) Tj
  T*
  (    redirect '/' unless 200 <= $resp<status> <= 201;) Tj
  T*
  (    redirect '/?error=state-mismatch' unless $state eq session.login-state;) Tj
  T*
  [ ] TJ
  T*
  (     Now get the user info so we can create a user) Tj
  T*
  (    my $json = from-json\($resp<content>\);) Tj
  T*
  (    $resp = $client.get\() Tj
  T*
  (      headers => {Authorization => "token {$json<access_token>}"},) Tj
  T*
  (      "https://api.github.com/user",) Tj
  T*
  (    \);) Tj
  T*
ET
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  77 112.15 458 473.15 re
  B
Q
endstream
endobj

27 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

28 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

29 0 obj
<<
  /Type /Page
  /Contents 30 0 R
  /Parent 3 0 R
  /Resources <<
    /ExtGState << /GS1 31 0 R /GS2 32 0 R >>
    /Font << /F1 10 0 R /F2 8 0 R >>
  >>
>>
endobj

30 0 obj
<< /Length 3945 >> stream
BT
  1 0 0 1 82 704 Tm
  /F1 8.5 Tf
  ($json = from-json\($resp<content>\);) Tj
  9.35 TL
  T*
  [ ] TJ
  T*
  (     determine if user exists) Tj
  T*
  (    my $user = $db.query\('select * from users where foreign_id = ?',  $json<id>\).hash;) Tj
  T*
  (    if \($user<foreign_id>//''\) ne $json<id> {) Tj
  T*
  (       create them) Tj
  T*
  (      my $id = UUID.new.Str;) Tj
  T*
  (      $db.query\('insert into users \(id, name, foreign_id\) values \(?, ?, ?\);', $id,) Tj
  T*
  ($json<name>, $json<id>\);) Tj
  T*
  (      $user = $db.query\('select * from users where id = ?',  $id\).hash;) Tj
  T*
  (    }) Tj
  T*
  [ ] TJ
  T*
  (     if the db failed for whatever reason, don't set the user session) Tj
  T*
  (    if \($user<foreign_id>//''\) eq $json<id> {) Tj
  T*
  (      session.user = $user;) Tj
  T*
  (      session.user-id = $user<id>;) Tj
  T*
  (    }) Tj
  T*
  (    redirect '/';) Tj
  T*
  (  }) Tj
  T*
  (}) Tj
ET
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  77 521.35 458 192.65 re
  B
Q
BT
  1 0 0 1 72 504.35 Tm
  /F2 10 Tf
  (Oof, this is a huge change, let's break it down. First big modification is the introduction of a session to our app.) Tj
  11 TL
  T*
  (We're going to keep our user data in the session so we don't need to load it every request so we can tell cro to hold) Tj
  T*
  (that in a session object resembling the ) Tj
ET
BT
  1 0 0 1 72 482.35 Tm
  /F1 8.5 Tf
  [ -18201 (SessionVar) ] TJ
ET
BT
  1 0 0 1 72 482.35 Tm
  /F2 10 Tf
  [ -20571 ( class we've designed.) ] TJ
ET
BT
  1 0 0 1 82 463.65 Tm
  /F1 8.5 Tf
  ( This will hold our session data) Tj
  9.35 TL
  T*
  (class SessionVar does Cro::HTTP::Auth {) Tj
  T*
  (  has $.user    is rw;) Tj
  T*
  (  has $.user-id is rw;) Tj
  T*
  (}) Tj
  T*
  (...) Tj
  T*
  [ ] TJ
  T*
  (   This tells Cro we want an InMemory session resembling SessionVar) Tj
  T*
  (  before Cro::HTTP::Session::InMemory[SessionVar].new\() Tj
  T*
  (    expiration  => Duration.new\(60*60\),) Tj
  T*
  (    cookie-name => 'demo-app',) Tj
  T*
  (  \);) Tj
ET
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  77 355.8 458 117.85 re
  B
Q
BT
  1 0 0 1 72 338.8 Tm
  /F2 10 Tf
  (Now we need to set up our redirect. This could also be done in a link rather than as an endpoint for our API but this) Tj
  11 TL
  T*
  (is also fine.) Tj
ET
BT
  1 0 0 1 82 309.1 Tm
  /F1 8.5 Tf
  (  get -> SessionVar \\session, 'oauth' {) Tj
  9.35 TL
  T*
  (    session.login-state = \('a' .. 'z'\).pick\(24\).sort.join\(''\);) Tj
  T*
  (    redirect 'https://github.com/login/oauth/authorize') Tj
  T*
  (           ~ "?client_id={encode-percents: config<gh-client>}") Tj
  T*
  (           ~ "&redirect_uri={encode-percents: "http://localhost:8666/oauth2"}"   take) Tj
  T*
  (note of this url, this is where we'll handle the login) Tj
  T*
  (           ~ "&state={encode-percents: session.login-state}";) Tj
  T*
  (  }) Tj
ET
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  77 238.65 458 80.45 re
  B
Q
BT
  1 0 0 1 72 221.65 Tm
  /F2 10 Tf
  (Now, if you were to fire up your server and have your github OAuth settings correct, you could hit ) Tj
ET
BT
  1 0 0 1 72 221.65 Tm
  /F1 8.5 Tf
  [ -46756 (/oauth) ] TJ
ET
BT
  1 0 0 1 72 221.65 Tm
  /F2 10 Tf
  [ -42803 ( and) ] TJ
  11 TL
  T*
  (you'd be presented with the nice github authorization screen.) Tj
ET
BT
  1 0 0 1 72 188.65 Tm
  (Now, once a user accepts or rejects the login request, we need to handle it:) Tj
ET
BT
  1 0 0 1 82 169.95 Tm
  /F1 8.5 Tf
  (  get -> SessionVar \\session, 'oauth2', :$state! is query, Str :$code! is query, :$error?) Tj
  9.35 TL
  T*
  (is query {) Tj
  T*
  (     If the user declined oauth, redirect home) Tj
  T*
  (    redirect '/' if $error.defined;) Tj
  T*
  [ ] TJ
  T*
  (     Here we're cashing in the code we got back from our redirect so that we can) Tj
  T*
  (     later request information about the user.) Tj
  T*
ET
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  77 108.85 458 71.1 re
  B
Q
endstream
endobj

31 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

32 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

33 0 obj
<<
  /Type /Page
  /Contents 34 0 R
  /Parent 3 0 R
  /Resources <<
    /ExtGState << /GS1 35 0 R /GS2 36 0 R >>
    /Font << /F1 10 0 R /F2 8 0 R >>
  >>
>>
endobj

34 0 obj
<< /Length 3452 >> stream
BT
  1 0 0 1 82 704 Tm
  /F1 8.5 Tf
  (my $resp = $client.post\() Tj
  9.35 TL
  T*
  (      headers => {Accept => 'application/json'},) Tj
  T*
  (      'https://github.com/login/oauth/access_token') Tj
  T*
  (      ~ "?client_id={encode-percents: config<gh-client> }") Tj
  T*
  (      ~ "&client_secret={encode-percents: config<gh-secret> }") Tj
  T*
  (      ~ "&code={encode-percents: $code }",) Tj
  T*
  (    \);) Tj
  T*
  [ ] TJ
  T*
  (     Go home if this code exchange failed.) Tj
  T*
  (    redirect '/' unless 200 <= $resp<status> <= 201;) Tj
  T*
  (     Go home if what we go back from the server is not what we expected) Tj
  T*
  (    redirect '/?error=state-mismatch' unless $state eq session.login-state;) Tj
  T*
  [ ] TJ
  T*
  (     Now get the user info so we can create a user) Tj
  T*
  (    my $json = from-json\($resp<content>\);) Tj
  T*
  (    $resp = $client.get\() Tj
  T*
  (      headers => {Authorization => "token {$json<access_token>}"},) Tj
  T*
  (      "https://api.github.com/user",) Tj
  T*
  (    \);) Tj
  T*
  (    $json = from-json\($resp<content>\);) Tj
  T*
  [ ] TJ
  T*
  (     determine if user exists) Tj
  T*
  (    my $user = $db.query\('select * from users where foreign_id = ?',  $json<id>\).hash;) Tj
  T*
  (    if \($user<foreign_id>//''\) ne $json<id> {) Tj
  T*
  (       create them) Tj
  T*
  (      my $id = UUID.new.Str;) Tj
  T*
  (      $db.query\('insert into users \(id, name, foreign_id\) values \(?, ?, ?\);', $id,) Tj
  T*
  ($json<name>, $json<id>\);) Tj
  T*
  (      $user = $db.query\('select * from users where id = ?',  $id\).hash;) Tj
  T*
  (    }) Tj
  T*
  [ ] TJ
  T*
  (     if the db failed for whatever reason, don't set the user session) Tj
  T*
  (    if \($user<foreign_id>//''\) eq $json<id> {) Tj
  T*
  (      session.user = $user;) Tj
  T*
  (      session.user-id = $user<id>;) Tj
  T*
  (    }) Tj
  T*
  (    redirect '/';) Tj
  T*
  (  }) Tj
ET
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  77 353.05 458 360.95 re
  B
Q
BT
  1 0 0 1 72 336.05 Tm
  /F2 10 Tf
  (Along with all this functionality, we also need to update our dependencies and project meta. The new ) Tj
ET
BT
  1 0 0 1 72 336.05 Tm
  /F1 8.5 Tf
  [ -47999 (use) ] TJ
ET
BT
  1 0 0 1 72 336.05 Tm
  /F2 10 Tf
  [ -42329 ( block:) ] TJ
ET
BT
  1 0 0 1 82 317.35 Tm
  /F1 8.5 Tf
  (use Cro::HTTP::Router;) Tj
  T*
  (use Cro::HTTP::Server;) Tj
  T*
  (use Cro::HTTP::Session::InMemory;) Tj
  T*
  (use Cro::WebApp::Template;) Tj
  T*
  (use Cro::Uri :encode-percents;) Tj
  T*
  (use HTTP::Tinyish;) Tj
  T*
  (use JSON::Fast;) Tj
  T*
  (use DB::SQLite;) Tj
  T*
  (use UUID;) Tj
ET
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  77 237.55 458 89.8 re
  B
Q
BT
  1 0 0 1 72 220.55 Tm
  /F2 10 Tf
  (and our new ) Tj
ET
BT
  1 0 0 1 72 220.55 Tm
  /F1 8.5 Tf
  [ -6109 (META6.json) ] TJ
ET
BT
  1 0 0 1 72 220.55 Tm
  /F2 10 Tf
  [ -10293 ( :) ] TJ
ET
BT
  1 0 0 1 82 201.85 Tm
  /F1 8.5 Tf
  ({) Tj
  T*
  (  "name":        "Demo",) Tj
  T*
  (  "auth":        "zef:tony-o",) Tj
  T*
  (  "version":     "0.0.1",) Tj
  T*
  (  "api":         "0",) Tj
  T*
  (  "description": "A demo cro app",) Tj
  T*
  (  "depends":     ["cro", "Cro::WebApp::Template", "HTTP::Tinyish", "DB::SQLite", "UUID"],) Tj
  T*
  (  "provides":    {) Tj
  T*
  (    "Demo::App": "lib/Demo/App.rakumod",) Tj
  T*
  (    "Config":    "lib/Config.rakumod") Tj
  T*
ET
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  77 112.7 458 99.15 re
  B
Q
endstream
endobj

35 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

36 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

37 0 obj
<<
  /Type /Page
  /Contents 38 0 R
  /Parent 3 0 R
  /Resources <<
    /ExtGState << /GS1 39 0 R /GS2 40 0 R >>
    /Font << /F1 10 0 R /F2 8 0 R /F3 9 0 R >>
  >>
>>
endobj

38 0 obj
<< /Length 3630 >> stream
BT
  1 0 0 1 82 704 Tm
  /F1 8.5 Tf
  (},) Tj
  9.35 TL
  T*
  (  "resources":  [ "db.sqlite" ]) Tj
  T*
  (}) Tj
ET
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  77 680.3 458 33.7 re
  B
Q
BT
  1 0 0 1 72 663.3 Tm
  /F2 10 Tf
  (Now, last thing before we can test. Our ) Tj
ET
BT
  1 0 0 1 72 663.3 Tm
  /F1 8.5 Tf
  [ -18754 (/) ] TJ
ET
BT
  1 0 0 1 72 663.3 Tm
  /F2 10 Tf
  [ -16451 ( route has changed to use our session rather than just lounging around. Let's) ] TJ
  11 TL
  T*
  (update our template to take advantage of our new powers.) Tj
ET
BT
  1 0 0 1 82 633.6 Tm
  /F1 8.5 Tf
  (<!DOCTYPE html>) Tj
  9.35 TL
  T*
  (<html>) Tj
  T*
  (  <head />) Tj
  T*
  (  <body>) Tj
  T*
  (    <!.logged-in> <!-- if we're not logged in !-->) Tj
  T*
  (      <a href="/oauth">Login</a>) Tj
  T*
  (    </!>) Tj
  T*
  (    <?.logged-in> <!-- if we're logged in !-->) Tj
  T*
  (      Welcome, <.user.name>) Tj
  T*
  (    </?>) Tj
  T*
  (  </body>) Tj
  T*
  (</html>) Tj
ET
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  77 525.75 458 117.85 re
  B
Q
BT
  1 0 0 1 72 508.75 Tm
  /F2 10 Tf
  (Fire that bad boy up with `raku -I. bin/app` and now when you first visit your site you'll get a ) Tj
ET
BT
  1 0 0 1 72 508.75 Tm
  /F1 8.5 Tf
  [ -44096 (login) ] TJ
ET
BT
  1 0 0 1 72 508.75 Tm
  /F2 10 Tf
  [ -40032 ( link and if you) ] TJ
  11 TL
  T*
  (decline then you'll just be shown the login link, if you choose to accept fate then you should see a nice little display) Tj
  T*
  (of your github name for the subsequent requests.) Tj
ET
BT
  1 0 0 1 72 464.75 Tm
  (At this point, if you were doing this in an effort to build something robust, you'd likely start look at real SQL servers) Tj
  T*
  (and the available connection pools for them so you don't have one DB reference. You'd also probably start looking) Tj
  T*
  (at session backends that are more persistent.) Tj
ET
BT
  1 0 0 1 72 417.45 Tm
  /F3 11.5 Tf
  (Members Only, Public Pages, and a Mix of Both) Tj
ET
BT
  1 0 0 1 72 395.45 Tm
  /F2 10 Tf
  (Now all that's left is to make a couple of pages.) Tj
ET
BT
  1 0 0 1 82 373.45 Tm
  () Tj
ET
BT
  1 0 0 1 92 373.45 Tm
  (Create a new topic \(only available if logged in\)) Tj
ET
BT
  1 0 0 1 82 351.45 Tm
  () Tj
ET
BT
  1 0 0 1 92 351.45 Tm
  (View a topic) Tj
ET
BT
  1 0 0 1 82 329.45 Tm
  () Tj
ET
BT
  1 0 0 1 92 329.45 Tm
  (* List hierarchy of replies) Tj
ET
BT
  1 0 0 1 82 307.45 Tm
  () Tj
ET
BT
  1 0 0 1 92 307.45 Tm
  (* Show respond form if logged in) Tj
ET
BT
  1 0 0 1 72 285.45 Tm
  (First let's show a link to make a post only if the user is logged in. In ) Tj
ET
BT
  1 0 0 1 72 285.45 Tm
  /F1 8.5 Tf
  [ -32172 (templates/main.crotmp) ] TJ
ET
BT
  1 0 0 1 72 285.45 Tm
  /F2 10 Tf
  [ -38056 ( :) ] TJ
ET
BT
  1 0 0 1 82 266.75 Tm
  /F1 8.5 Tf
  (<!DOCTYPE html>) Tj
  9.35 TL
  T*
  (<html>) Tj
  T*
  (  <head />) Tj
  T*
  (  <body>) Tj
  T*
  (    <!.logged-in>) Tj
  T*
  (      <a href="/oauth">Login</a>) Tj
  T*
  (    </!>) Tj
  T*
  (    <?.logged-in>) Tj
  T*
  (      Welcome, <.user.name> | <a href="/post">New Post</a>) Tj
  T*
  (    </?>) Tj
  T*
  (  </body>) Tj
  T*
  (</html>) Tj
ET
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  77 158.9 458 117.85 re
  B
Q
BT
  1 0 0 1 72 141.9 Tm
  /F2 10 Tf
  (The new route \(in ) Tj
ET
BT
  1 0 0 1 72 141.9 Tm
  /F1 8.5 Tf
  [ -8691 (lib/Demo/App.rakumod) ] TJ
ET
BT
  1 0 0 1 72 141.9 Tm
  /F2 10 Tf
  [ -17587 ( \):) ] TJ
ET
BT
  1 0 0 1 82 123.2 Tm
  /F1 8.5 Tf
  (   Anything requiring this subset will not match unless their session `user-id` is) Tj
  T*
  (defined) Tj
  T*
ET
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  77 108.85 458 24.35 re
  B
Q
endstream
endobj

39 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

40 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

41 0 obj
<<
  /Type /Page
  /Contents 42 0 R
  /Parent 3 0 R
  /Resources <<
    /ExtGState << /GS1 43 0 R /GS2 44 0 R >>
    /Font << /F1 10 0 R /F2 8 0 R /F3 9 0 R >>
  >>
>>
endobj

42 0 obj
<< /Length 3420 >> stream
BT
  1 0 0 1 82 704 Tm
  /F1 8.5 Tf
  (subset LoggedIn of SessionVar where *.user-id ?? True !! False;) Tj
  9.35 TL
  T*
  [ ] TJ
  T*
  (   The actual `create post` route) Tj
  T*
  (  get -> LoggedIn \\session, 'post' {) Tj
  T*
  (     This is necessary because we provide no other handlers if the user isn't logged in) Tj
  T*
  (    redirect '/oauth' unless session.user-id;) Tj
  T*
  [ ] TJ
  T*
  (    template 'post.crotmp', { title => '', body => '', errors => [] };) Tj
  T*
  (  }) Tj
  T*
  [ ] TJ
  T*
  (   Handle the POST request to make the post) Tj
  T*
  (  post -> LoggedIn \\session, 'post' {) Tj
  T*
  (     This is necessary because we provide no other handlers if the user isn't logged in) Tj
  T*
  (    redirect '/oauth' unless session.user-id;) Tj
  T*
  [ ] TJ
  T*
  (    request-body -> \(:$title, :$body\) {) Tj
  T*
  (       Handle all of the errors so the user isn't clicking back and forth to fix every) Tj
  T*
  (single) Tj
  T*
  (       issue.) Tj
  T*
  (      my @errors;) Tj
  T*
  (      @errors.push\('Title cannot be fewer than five characters'\) if $title.chars <= 5;) Tj
  T*
  (      @errors.push\('Post cannot be fewer than fifty characters'\) if $body.chars <= 50;) Tj
  T*
  [ ] TJ
  T*
  (      if @errors {) Tj
  T*
  (        template 'post.crotmp', {) Tj
  T*
  (          :$title,) Tj
  T*
  (          :$body,) Tj
  T*
  (          :@errors,) Tj
  T*
  (        };) Tj
  T*
  (        last;) Tj
  T*
  (      }) Tj
  T*
  [ ] TJ
  T*
  [ ] TJ
  T*
  (      my $id = UUID.new.Str;) Tj
  T*
  (      my $ok = $db.query\('insert into posts \(id, title, body, author\) values \(?, ?, ?,) Tj
  T*
  (?\);', $id, $title, $body, session.user-id\);) Tj
  T*
  (      if $ok {) Tj
  T*
  (         The post was successful, let's show the user) Tj
  T*
  (        redirect "/view/{$id}";) Tj
  T*
  (      } else {) Tj
  T*
  (         The insert failed, let's show the user) Tj
  T*
  (        @errors.push\('An error occurred while saving your post, please try again later'\);) Tj
  T*
  (        template 'post.crotmp', { :$title, :$body, :@errors };) Tj
  T*
  (      }) Tj
  T*
  (    }) Tj
  T*
  (  }) Tj
ET
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  77 278.25 458 435.75 re
  B
Q
BT
  1 0 0 1 72 261.25 Tm
  /F2 10 Tf
  (Okay, now we have a working endpoint. When you fire up the app you can log in and you can create posts. So,) Tj
  11 TL
  T*
  (what's left for this tiny demo? Let's make the ) Tj
ET
BT
  1 0 0 1 72 250.25 Tm
  /F1 8.5 Tf
  [ -21434 (/view/:post-id) ] TJ
ET
BT
  1 0 0 1 72 250.25 Tm
  /F2 10 Tf
  [ -25359 ( endpoint so we can see our posts. We'll take the) ] TJ
  T*
  (format of the old bulletin boards where we show the body and then a threaded view of responses below it.) Tj
ET
BT
  1 0 0 1 72 213.95 Tm
  /F3 11.5 Tf
  (Hierarchal Post View) Tj
ET
BT
  1 0 0 1 72 191.95 Tm
  /F2 10 Tf
  (First let's get the easy part out of the way, in ) Tj
ET
BT
  1 0 0 1 72 191.95 Tm
  /F1 8.5 Tf
  [ -21125 (templates/view.crotmp) ] TJ
ET
BT
  1 0 0 1 72 191.95 Tm
  /F2 10 Tf
  [ -28666 ( :) ] TJ
ET
BT
  1 0 0 1 82 173.25 Tm
  /F1 8.5 Tf
  (<!DOCTYPE html>) Tj
  9.35 TL
  T*
  (<html>) Tj
  T*
  (  <head>) Tj
  T*
  (    <link rel="stylesheet" type="text/css" href="/css/demo.css" />) Tj
  T*
  (  </head>) Tj
  T*
  (  <body>) Tj
  T*
  (    <h2><.post.title></h2>) Tj
  T*
ET
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  77 112.15 458 71.1 re
  B
Q
endstream
endobj

43 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

44 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

45 0 obj
<<
  /Type /Page
  /Contents 46 0 R
  /Parent 3 0 R
  /Resources <<
    /ExtGState << /GS1 47 0 R /GS2 48 0 R >>
    /Font << /F1 10 0 R /F2 8 0 R >>
  >>
>>
endobj

46 0 obj
<< /Length 3498 >> stream
BT
  1 0 0 1 82 704 Tm
  /F1 8.5 Tf
  (<pre>) Tj
  9.35 TL
  T*
  (      <.post.body>) Tj
  T*
  (    </pre>) Tj
  T*
  (    <@.levels:$l>) Tj
  T*
  (      <div>) Tj
  T*
  (        <&HTML\($l.level\)>&gt; <a href="/view/<$l.id>"><$l.title></a>) Tj
  T*
  (      </div>) Tj
  T*
  (    </@>) Tj
  T*
  (    <!-- if we're logged in then show a response form! !-->) Tj
  T*
  (    <?.logged-in>) Tj
  T*
  (      <br/>) Tj
  T*
  (      <br/>) Tj
  T*
  (      <@.response.errors: $err>) Tj
  T*
  (        <div>Error: <$err></div>) Tj
  T*
  (      </@>) Tj
  T*
  (      <form method="POST" action="/view/<.post.id>">) Tj
  T*
  (        <div><input type="text" name="title" placeholder="Response Title") Tj
  T*
  (value="<.response.title>" /></div>) Tj
  T*
  (        <div><textarea name="body" cols="40" rows="20"><.response.body></textarea></div>) Tj
  T*
  (        <div><input type="submit" value="Post" /></div>) Tj
  T*
  (      </form>) Tj
  T*
  (    </?>) Tj
  T*
  (  </body>) Tj
  T*
  (</html>) Tj
ET
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  77 483.95 458 230.05 re
  B
Q
BT
  1 0 0 1 72 466.95 Tm
  /F2 10 Tf
  (Cool. Now if you're logged in you'll see a form to respond to whatever post you're viewing. We're wrapping our post) Tj
  11 TL
  T*
  (body in ) Tj
ET
BT
  1 0 0 1 72 455.95 Tm
  /F1 8.5 Tf
  [ -3856 (pre) ] TJ
ET
BT
  1 0 0 1 72 455.95 Tm
  /F2 10 Tf
  [ -4808 ( because we're kicking it old school for this post. Let's add our routes in ) ] TJ
ET
BT
  1 0 0 1 72 455.95 Tm
  /F1 8.5 Tf
  [ -39671 (lib/Demo/App.rakumod) ] TJ
ET
BT
  1 0 0 1 72 455.95 Tm
  /F2 10 Tf
  [ -43920 ( :) ] TJ
ET
BT
  1 0 0 1 82 437.25 Tm
  /F1 8.5 Tf
  (  get -> SessionVar \\session, 'view', $id {) Tj
  9.35 TL
  T*
  (     Build-post-hierarchy is doing some fun stuff to make our template code simple, more) Tj
  T*
  (after the break) Tj
  T*
  (    my $data = build-post-hierarchy\($id\);) Tj
  T*
  (    if !$data {) Tj
  T*
  (       If the post doesn't exist, go home) Tj
  T*
  (      redirect '/';) Tj
  T*
  (    } else {) Tj
  T*
  (      template 'view.crotmp', {) Tj
  T*
  (        :post\($data<post>\),) Tj
  T*
  (        :levels\($data<levels>\),) Tj
  T*
  (        response => {title => '', body => '', parent => $id, errors => [] },) Tj
  T*
  (        logged-in => \(session.user-id ?? True !! False\),) Tj
  T*
  (      };) Tj
  T*
  (    }) Tj
  T*
  (  }) Tj
  T*
  [ ] TJ
  T*
  (  post -> SessionVar \\session, 'view', $id {) Tj
  T*
  (     Build-post-hierarchy is doing some fun stuff to make our template code simple, more) Tj
  T*
  (after the break) Tj
  T*
  (    my $data = build-post-hierarchy\($id\);) Tj
  T*
  (    if !$data {) Tj
  T*
  (      redirect '/';) Tj
  T*
  (    } else {) Tj
  T*
  (      request-body -> \(:$title, :$body\) {) Tj
  T*
  (        my @errors;) Tj
  T*
  (        @errors.push\('Title cannot be fewer than five characters'\) if $title.chars <= 5;) Tj
  T*
  (        @errors.push\('Post cannot be fewer than fifty characters'\) if $body.chars <= 50;) Tj
  T*
  [ ] TJ
  T*
  (        if @errors {) Tj
  T*
  (          template 'view.crotmp', {) Tj
  T*
  (            :post\($data<post>\),) Tj
  T*
  (            :levels\($data<levels>\),) Tj
  T*
  (            response => {title => $title, body => $body, parent => $id, errors => [] },) Tj
  T*
  (            logged-in => \(session.user-id ?? True !! False\),) Tj
  T*
  (            :@errors,) Tj
  T*
ET
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  77 105 458 342.25 re
  B
Q
endstream
endobj

47 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

48 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

49 0 obj
<<
  /Type /Page
  /Contents 50 0 R
  /Parent 3 0 R
  /Resources <<
    /ExtGState << /GS1 51 0 R /GS2 52 0 R >>
    /Font << /F1 10 0 R /F2 8 0 R >>
  >>
>>
endobj

50 0 obj
<< /Length 3972 >> stream
BT
  1 0 0 1 82 704 Tm
  /F1 8.5 Tf
  (};) Tj
  9.35 TL
  T*
  (        } else {) Tj
  T*
  (          my $rid = UUID.new.Str;) Tj
  T*
  (          my $ok = $db.query\('insert into posts \(id, title, body, author, parent\) values) Tj
  T*
  (\(?, ?, ?, ?, ?\);', $rid, $title, $body, session.user-id, $id\);) Tj
  T*
  (          if $ok {) Tj
  T*
  (             see-other is letting Cro know we need to do a `GET` request, otherwise) Tj
  T*
  (we'll get stuck in an infinite loop) Tj
  T*
  (            redirect :see-other, "/view/{$rid}";) Tj
  T*
  (          } else {) Tj
  T*
  (            @errors.push\('An error occurred while saving your post, please try again) Tj
  T*
  (later'\);) Tj
  T*
  (            template 'view.crotmp', {) Tj
  T*
  (              :post\($data<post>\),) Tj
  T*
  (              :levels\($data<levels>\),) Tj
  T*
  (              response => {title => $title, body => $body, parent => $id, errors =>) Tj
  T*
  (@errors },) Tj
  T*
  (              logged-in => \(session.user-id ?? True !! False\),) Tj
  T*
  (              :@errors,) Tj
  T*
  (            };) Tj
  T*
  (          }) Tj
  T*
  (        }) Tj
  T*
  (      }) Tj
  T*
  (    }) Tj
  T*
  (  }) Tj
ET
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  77 474.6 458 239.4 re
  B
Q
BT
  1 0 0 1 72 457.6 Tm
  /F2 10 Tf
  (The ) Tj
ET
BT
  1 0 0 1 72 457.6 Tm
  /F1 8.5 Tf
  [ -2124 (POST) ] TJ
ET
BT
  1 0 0 1 72 457.6 Tm
  /F2 10 Tf
  [ -3845 ( route is very similar to the ) ] TJ
ET
BT
  1 0 0 1 72 457.6 Tm
  /F1 8.5 Tf
  [ -17496 (post) ] TJ
ET
BT
  1 0 0 1 72 457.6 Tm
  /F2 10 Tf
  [ -16912 ( route of the same method/name. It's doing essentially the same thing but) ] TJ
  11 TL
  T*
  (adding a parent id to the post so that when we build the hierarchy we know exactly what to do. Let's take a look at) Tj
  T*
  (that hierarchy builder \(in ) Tj
ET
BT
  1 0 0 1 72 435.6 Tm
  /F1 8.5 Tf
  [ -12024 (lib/Demo/App.rakumod) ] TJ
ET
BT
  1 0 0 1 72 435.6 Tm
  /F2 10 Tf
  [ -20420 ( \):) ] TJ
ET
BT
  1 0 0 1 82 416.9 Tm
  /F1 8.5 Tf
  ( This sub is declared outside of our routes so we can use it in the GET/POST version) Tj
  9.35 TL
  T*
  (sub build-post-hierarchy\(Str:D $id\) {) Tj
  T*
  (   Ensure the post exists prior to building the hierarchy) Tj
  T*
  (  my %post    = $db.query\('select p.id, p.title, p.body, u.name from posts p left join) Tj
  T*
  (users u on u.id = p.author where p.id = ?;', $id\).hash;) Tj
  T*
  [ ] TJ
  T*
  (   This query looks a little complicated and requires SQLite > 3.8.2) Tj
  T*
  (   In `threads.*` we're following our top level to gather all nested sets of responses) Tj
  T*
  (   In `threads.*` the query of `parents.*` is following whatever thread we're viewing) Tj
  T*
  (until) Tj
  T*
  (   we find a post with parent = null and this is our top level post) Tj
  T*
  (  my $sql     = q:to/EOSQL/;) Tj
  T*
  (with recursive threads\(level,id,title,parent\) as \() Tj
  T*
  (        select 0, id, title, parent from posts where id = \() Tj
  T*
  (          with recursive parents\(id,parent\) as \() Tj
  T*
  (        select id, parent from posts where id = ?) Tj
  T*
  (        union all) Tj
  T*
  (        select p.id, p.parent from posts p, parents where p.id = parents.parent) Tj
  T*
  (          \) select id from parents where parent is null) Tj
  T*
  (        \)) Tj
  T*
  (        union all) Tj
  T*
  (        select level+1, p.id, p.title, p.parent from posts p, threads where p.parent =) Tj
  T*
  (threads.id) Tj
  T*
  (\) select * from threads order by level, parent;) Tj
  T*
  (EOSQL) Tj
  T*
  [ ] TJ
  T*
  (   Return the problem to the handler) Tj
  T*
  (  if \(%post<id>//''\) ne $id {) Tj
  T*
  (    return Nil) Tj
  T*
  (  }) Tj
  T*
  [ ] TJ
  T*
  (   This code makes it easy for templates to consume the posts as an ordered hierarchy) Tj
  T*
  (   so that the template may just iterate an array) Tj
  T*
ET
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  77 112.7 458 314.2 re
  B
Q
endstream
endobj

51 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

52 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

53 0 obj
<<
  /Type /Page
  /Contents 54 0 R
  /Parent 3 0 R
  /Resources <<
    /ExtGState << /GS1 55 0 R /GS2 56 0 R >>
    /Font << /F1 10 0 R /F2 8 0 R >>
  >>
>>
endobj

54 0 obj
<< /Length 2990 >> stream
BT
  1 0 0 1 82 704 Tm
  /F1 8.5 Tf
  (my @threads = $db.query\($sql, $id\).hashes;) Tj
  9.35 TL
  T*
  (  my %indexes;) Tj
  T*
  (  my @levels;) Tj
  T*
  (  for @threads -> $t {) Tj
  T*
  (    if %indexes{$t<parent>//''} {) Tj
  T*
  (      @levels.splice\(%indexes{$t<parent>}, 0, { id => $t<id>, title => $t<title>, \(level) Tj
  T*
  (=> '&nbsp' x $t<level> * 4\) }\);) Tj
  T*
  (      for %indexes.keys -> $k {) Tj
  T*
  (        %indexes{$k}++ if %indexes{$t<parent>} < %indexes{$k};) Tj
  T*
  (      }) Tj
  T*
  (      %indexes{$t<id>} = %indexes{$t<parent>} + 1;) Tj
  T*
  (    } else {) Tj
  T*
  (      @levels.push\({ id => $t<id>, title => $t<title>, level => \('&nbsp;' x $t<level> *) Tj
  T*
  (4\) }\);) Tj
  T*
  (      %indexes{$t<id>} = @levels.elems;) Tj
  T*
  (    }) Tj
  T*
  (  }) Tj
  T*
  (  return {:%post, :@levels};) Tj
  T*
  (}) Tj
ET
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  77 530.7 458 183.3 re
  B
Q
BT
  1 0 0 1 72 513.7 Tm
  /F2 10 Tf
  (Whew. That's definitely a mouth full. Likely your use cases will be more straightforward but easy tutorials usually) Tj
  11 TL
  T*
  (leave out some crucial bit and this is intended to show some complication.) Tj
ET
BT
  1 0 0 1 72 480.7 Tm
  (All that's left at this point is making the homepage show top level posts so let's modify our home page's route \(in ) Tj
ET
BT
  1 0 0 1 72 480.7 Tm
  /F1 8.5 Tf
  [ -53313 ] TJ
  9.35 TL
  T*
  (lib/Demo/App.rakumod) Tj
ET
BT
  1 0 0 1 72 471.35 Tm
  /F2 10 Tf
  [ -10200 ( \):) ] TJ
ET
BT
  1 0 0 1 82 452.65 Tm
  /F1 8.5 Tf
  (  get -> SessionVar \\session {) Tj
  T*
  (    template 'main.crotmp', {) Tj
  T*
  (      user      => session.user,) Tj
  T*
  (       Add posts !) Tj
  T*
  (      posts     => $db.query\('select id, title from posts where parent is null'\).hashes,) Tj
  T*
  (      logged-in => \(session.user-id ?? True !! False\),) Tj
  T*
  (    };) Tj
  T*
  (  }) Tj
ET
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  77 382.2 458 80.45 re
  B
Q
BT
  1 0 0 1 72 365.2 Tm
  /F2 10 Tf
  (Our template to match \(`templates/main.crotmp`\):) Tj
ET
BT
  1 0 0 1 82 346.5 Tm
  /F1 8.5 Tf
  (<!DOCTYPE html>) Tj
  T*
  (<html>) Tj
  T*
  (  <head />) Tj
  T*
  (  <body>) Tj
  T*
  (    <div>) Tj
  T*
  (    <!.logged-in>) Tj
  T*
  (      <a href="/oauth">Login</a>) Tj
  T*
  (    </!>) Tj
  T*
  (    <?.logged-in>) Tj
  T*
  (      Welcome, <.user.name> | <a href="/post">New Post</a>) Tj
  T*
  (    </?>) Tj
  T*
  (    </div>) Tj
  T*
  (    <h2>Posts</h2>) Tj
  T*
  (    <@.posts:$p>) Tj
  T*
  (    <div>) Tj
  T*
  (      ° <a href="/view/<$p.id>"><$p.title></a>) Tj
  T*
  (    </@>) Tj
  T*
  (  </body>) Tj
  T*
  (</html>) Tj
ET
q
  0 g
  0 G
  /GS1 gs
  /GS2 gs
  77 173.2 458 183.3 re
  B
Q
BT
  1 0 0 1 72 156.2 Tm
  /F2 10 Tf
  (Okay. That's it! You have a working cro app \(or should\)! Let's review what we've done in this app:) Tj
ET
BT
  1 0 0 1 82 134.2 Tm
  () Tj
ET
BT
  1 0 0 1 92 134.2 Tm
  (Visitors can log in via OAuth) Tj
ET
endstream
endobj

55 0 obj
<< /Type /ExtGState /ca 0.1 >>
endobj

56 0 obj
<< /Type /ExtGState /CA 0.25 >>
endobj

57 0 obj
<<
  /Type /Page
  /Contents 58 0 R
  /Parent 3 0 R
  /Resources << /Font << /F1 8 0 R >> >>
>>
endobj

58 0 obj
<< /Length 844 >> stream
BT
  1 0 0 1 82 704 Tm
  /F1 10 Tf
  () Tj
ET
BT
  1 0 0 1 92 704 Tm
  (Anyone can view posts/responses) Tj
ET
BT
  1 0 0 1 82 682 Tm
  () Tj
ET
BT
  1 0 0 1 92 682 Tm
  (Registered users can create new posts and respond) Tj
ET
BT
  1 0 0 1 72 660 Tm
  (Seems like a lot of code for these three basic functions \(and it is\) but bulletin boards can get even more complicated) Tj
  11 TL
  T*
  (very quickly.) Tj
ET
BT
  1 0 0 1 72 627 Tm
  (This is part one of building a cro application end to end including deployment and next week the topic will be) Tj
  T*
  (configuring apache to reverse proxy to our cro app and configuring systemd to ensure our app is available.) Tj
ET
BT
  1 0 0 1 72 594 Tm
  (Note: the full code for this demo can be found ) Tj
ET
q
  0 0 1 rg
  0 0 1 RG
  BT
    1 0 0 1 72 594 Tm
    [ -18719 (here) ] TJ
  ET
Q
endstream
endobj

xref
0 59
0000000000 65535 f 
0000000015 00000 n 
0000000190 00000 n 
0000000251 00000 n 
0000000430 00000 n 
0000000622 00000 n 
0000004154 00000 n 
0000004201 00000 n 
0000004249 00000 n 
0000004357 00000 n 
0000004464 00000 n 
0000004551 00000 n 
0000004658 00000 n 
0000004768 00000 n 
0000004953 00000 n 
0000009357 00000 n 
0000009405 00000 n 
0000009454 00000 n 
0000009639 00000 n 
0000013268 00000 n 
0000013316 00000 n 
0000013365 00000 n 
0000013550 00000 n 
0000017429 00000 n 
0000017477 00000 n 
0000017526 00000 n 
0000017701 00000 n 
0000021104 00000 n 
0000021152 00000 n 
0000021201 00000 n 
0000021376 00000 n 
0000025375 00000 n 
0000025423 00000 n 
0000025472 00000 n 
0000025647 00000 n 
0000029153 00000 n 
0000029201 00000 n 
0000029250 00000 n 
0000029435 00000 n 
0000033119 00000 n 
0000033167 00000 n 
0000033216 00000 n 
0000033401 00000 n 
0000036875 00000 n 
0000036923 00000 n 
0000036972 00000 n 
0000037147 00000 n 
0000040699 00000 n 
0000040747 00000 n 
0000040796 00000 n 
0000040971 00000 n 
0000044997 00000 n 
0000045045 00000 n 
0000045094 00000 n 
0000045269 00000 n 
0000048313 00000 n 
0000048361 00000 n 
0000048410 00000 n 
0000048523 00000 n 
trailer
<<
  /ID [ <39341ce3438cd5d9e5b68a4dcf4718c4> <39341ce3438cd5d9e5b68a4dcf4718c4> ]
  /Info 1 0 R
  /Root 2 0 R
  /Size 59
>>
startxref
49420
%%EOF